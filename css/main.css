@charset "utf-8"; /* 한글 깨지지 않도록 꼭 ; 으로 닫아줘야함*/

/* ==== reset : html이 갖는 기본 속성들을 없앰 ==== */
* {margin: 0;padding: 0;}
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, font, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, tbody, tfoot, thead, tr, th, td{margin:0;padding:0;}
h1, h2, h3, h4, h5, h6 {font-weight: 700; font-size: inherit;}

/* a테그의 파란색, 밑줄 리셋 */
a {color: inherit; text-decoration: inherit;} 

/* line box 안에서 수직 정렬을 중간으로 설정 */
img {vertical-align: middle;}

/* a테그 안의 img 테그의 border 0으로 */
a img {border: none;}

/* li의 꾸밈요소 리셋 */
li {list-style: none;}

/* 기울어지거나 강조되는 폰트 리셋 */
address, em, i {font-style: normal;}

/* ==== layout ==== */
body {font-family: 'NanumSquare', sans-serif !important; font-size: 14px; color:#4e4e4e; line-height: 1.4;}

/* 맨 위 메뉴의 width와 min-width를 지정함으로서 동적페이지 만듦 */
.wrap {width: 100%; min-width: 1100px;}

/* ==== header ==== */
/* line-height : 120px; -> line-height 값을 width와 같게 주면 가운데에 위치하게 됨*/
/* box-sizing: border-box; -> 컨텐츠의 크기를 테두리 포함한 크기로 인식 */
/* position: fixed; -> 스크롤해도 메뉴는 상단에 고정 */
/* top:0; -> position을 어디에 fix 할건지 지정*/
header {width: 100%; height: 120px; line-height: 120px; padding: 0 60px; box-sizing: border-box; position: fixed; top:0; z-index: 100; background: white;}

/* display: black; -> a 테그는 원래 inline이므로 block으로 바꿈 */
/* letter-spacing: -6px; -> 글자사이 간격 조절 */
header .logo {display: block; font-size: 42px; font-weight: 900;letter-spacing: -6px; color: #39312b; float: left;}

/* float: right; -> 컨테이너(여기서는 header)안의 위치 지정 */
header nav {float: right;}

/* display: inline-block; -> inline 처럼 옆에 있게는 하되 block 처럼 width, height, 등 조절 가능 */
header nav .gnb li {display: inline-block; margin-left: 60px;}

/* display: block; -> inline 인 a 테그를 block으로 바꿈으로서 클릭 영역이 넓어짐 */
/* position: relative; -> 아래에 그어질 선 absolute가 이를 기준으로 움직여야 하므로 */
header nav .gnb li a {display: block; font-size: 18px; text-transform: uppercase; position: relative; }

/* 가상 요소(Pseudo-Element) */
/* 실제 html문서에는 없지만, 있는 것처럼 작용함. 선택자의 뒤에 위치함 */
/* ::before – 실제 내용 바로 앞에서 생성되는 자식요소 */
/* ::after – 실제 내용 바로 뒤에서 생성되는 자식요소 */
/* position: absolute; -> position:static(기본) 속성을 가지고 있지 않은 부모를 기준으로 움직임 */
/* left: 50%; transform: translateX(-50%); -> position: absolute;로 위치를 지정했을때 중앙 정렬하는 방법 */
/* transition: all -> 상태에 변화를 줌, :after 에 적용됨*/
header nav .gnb li a:after {content: ''; width: 0%; height: 1px;
position: absolute; background: #888; bottom: 47px; left: 50%; transform: translateX(-50%); transition: all 0.5s}

/* a:hover:after -> a에 hover 했을때, 추가되는 것 */
/* a:focus:after -> a에 focus 되었을때(tab으로 이동), 추가되는 것 */
/* :focus와 :hover는 가상클래스이고 :after는 가상요소 */
header nav .gnb li a:hover:after, header nav .gnb li a:focus:after{ width: 100%;}

/* ==== visual ==== */
/* margin-top: 120px; -> 메뉴가 덮어지지 않도록 margin 설정 */
section.visual {margin-top: 120px; padding-bottom: 50px; position: relative;} 

section.visual:before {content: ''; width: 53%; height: 400px; position: absolute; bottom: 0; right: 0;background: #f0f0f0;}

/* overflow: hidden; -> 스케일이 커지면서 넘치는 부분 숨기기 */
section.visual .img {width: 94%; text-align: center; position: relative; overflow: hidden;}

section.visual .img img {width: 100%;}

section.visual .title {position: absolute; top:40%; left: 8%; color: #fff;}
/* Q. 왜 .tile을 absolute로 했는데 .img 가 기준이 되는지? 부모여야 relative-absolute 관계가 성립되지 않나? */

section.visual .title h2{font-size: 50px; margin-bottom: 30px;}

section.visual .title p {font-size: 20px; font-weight: 300;}

/* absolute의 위치는 ~~에서부터 라고 이해하면 쉬움*/
section.visual .menu {position: absolute; bottom: 15%; left: 8%;   }

/* float -> 텍스트 안에 이미지삽입으로도 쓰이지만, 레이아웃에서도 쓰임 */
/* float: left; -> 여러 클래스에 걸렸을경우, 순서대로 좌측 정열 */
section.visual .menu li{float: left; margin-right: 60px; }

/* display:(inline-)block; -> a는 인라인요소이므로 hover을 적용하려면 영역을 넓히는 block요소 필요 */
section.visual .menu li a{display: block; color: #fff;}

/* float: left; -> p와 함께 a 안에 있는 arrow와 구분되어 왼쪽에 정렬됨 */
section.visual .menu li a p {float: left; font-weight: bold; font-size: 20px; line-height: 1.6;}

/* display: block; -> p 안에서 span과 그냥 p를 구분하기 위해 block요소로 구분 */
section.visual .menu li a p span {display: block;font-weight: 100; font-size: 15px; color: #aaa;}

/* display: block; -> a안의 p와 .arroq를 구분하기 위해 block요소로 구분 */
/* position: relative; -> 가상요소의 위치를 자신기준으로 하기 위해 설정 */
section.visual .menu li a .arrow {display: block; float: right; margin-top: 10px; margin-left: 20px; position: relative; z-index: 1; }

/* 색 미세조정-> 색 입력, 선택, Ctrl+e */
/* transition: all 0.2s; -> 변화가 생기면 모두 변하되, 0.2s동안 변화함 */
section.visual .menu li a .arrow:before {content: ''; width: 40px; height: 40px; background: rgba(252, 252, 252, 0.4);position: absolute; top:-10px; right: -10px; z-index: -5; transition: all 0.5s;}
/* a:hover .arrow:before -> a에 hover 했을때, .arrow의 before의 변화 */
section.visual .menu li a:hover .arrow:before,section.visual .menu li a:focus .arrow:before {right: 0; top: 0;}

/* class = "mask a" 식으로 적힌 클래스에 접근 -> 두개의 클래스 모두를 갖고 있으므로, mask에 접근하려면 .mask 선택자 이용, mask a에 접근하려면 .mask.a 선택자 이용*/
section.visual .img .mask {display: block; position: absolute; top:0; width: 1px; height: 100%; background: rgba(255, 255, 255, 0.16);}
section.visual .img .mask.a {left: 0%}
section.visual .img .mask.b {left: 25%}
section.visual .img .mask.c {left: 50%}
section.visual .img .mask.d {left: 75%}

/* @keyframes -> css 애니메이션과정을 제어할 수 있는 키워드 */
/* width:1px 이었던 mask가 width:25%, bg:black이 되었다가 애니메이션이 끝나면 원상복귀됨 */
@keyframes mask {
    0%{width: 25%; background:#000;}
    50%{width: 25%; background:#000;}
    99%{width: 0%; background:#000;}
}

/* animation 속성 -> css 에니메이션 제어 */
section.visual .img .mask.a {animation-name: mask; animation-duration: 0.4s; }
section.visual .img .mask.b {animation-name: mask; animation-duration: 0.6s; }
section.visual .img .mask.c {animation-name: mask; animation-duration: 0.8s; }
section.visual .img .mask.d {animation-name: mask; animation-duration: 1s; }

@keyframes slide-up {
    0%{opacity: 0;}
   40%{opacity: 0; transform: translateY(40px);}
}

section.visual .title h2{animation-name: slide-up; animation-duration: 1.5s;}
section.visual .title p{animation-name: slide-up; animation-duration: 2.2s;}
section.visual .menu {animation-name: slide-up; animation-duration: 2.8s;}

@keyframes scaleani{
    0%{transform: scale(1.3);}
    30%{transform: scale(1.3);}
}
section.visual .img img {transform: scale(1); animation-name: scaleani; animation-duration: 2s;}

/* ==== about ==== */

/* about 으로 다 감싸고 안에 내용을 배치할 것이므로 position:relative; 설정해주는게 좋음 */
section.about {width: 95%; margin: 40px auto; text-align: center; position: relative;}

section.about img{width: 100%;}

/* left: 50%; transform: translateX(-50%); -> position: absolute;로 위치를 지정했을때 중앙 정렬하는 방법 */
/* 따라서, top:50%;  left:50%; transform: translate(-50%,-50%); -> 한가운데에 위치시키는 법임을유츄할 수 있음 */
section.about .inner{width: 100%; position: absolute; top:50%; left:50%; transform: translate(-50%,-50%);}

section.about .inner h2{font-size: 30px; color:#fff; font-weight: normal;}

/* line span의 기준이 되기 위해 position: relative; 설정 */
/* width와 margin도 점을 위치의 기준 위해 설정 */
section.about .inner .line{width: 35%; margin: 80px auto 30px; position: relative;}

/* span은 선을 구성하는 테그 */
section.about .inner .line span {display: block; width: 100%; height: 1px; background: rgba(255, 255, 255, 0.25); }

/* li은 점을 구성하는 테그 */
/* border-radius: 50%; + 너비와 높이 동일 -> 원 만들어짐 */
section.about .inner .line li{width: 6px; height: 6px; border-radius: 50%; background: #fff; position: absolute;}
section.about .inner .line li.a {left:0; top:-2px;}
section.about .inner .line li.b{left :50%; transform: translateX(-50%); top:-2px;}
section.about .inner .line li.c {right:0; top:-2px;}

/* 점에 작용하는 영구 애니메이션 만들기 */
@keyframes dot {
    100%{opacity: 1; transform: scale(3.5); opacity: 0;}
}
/* Q. 왜 width: 100%; height: 100%;인지 모르겠음 */
/* animation-iteration-count: infinite; -> 애니메이션 무한반복 */
section.about .inner .line li:before {content:''; width: 100%; height: 100%; border-radius: 50%; background: rgba(255, 255, 255, 0.7); position: absolute; left:50%; top:50%; animation: dot 1.5s infinite; margin-top:-3px; margin-left:-2.9px;}

/* ul부분 즉, 선 아래 글씨부분 설정 */
/* margin: 0 auto; -> 가운데에 오도록 설정 */
section.about .inner ul {width: 55%; margin: 0 auto;}
section.about .inner ul li {color: #c5c5c5; float: left; width:33.333%; font-size: 15px; font-weight: 100;}
section.about .inner ul li h3 {font-size: 19px; margin-bottom: 20px; font-weight: normal; color: #fff;}

/* inner 내용 애니메이션 */
section.about .inner h2 {animation-name: slide-up; animation-duration: 0.8s; }

@keyframes opacity-ani{
    0%{opacity: 0;}
    70%{opacity: 0;}
}
section.about .inner .line span {animation-name: opacity-ani; animation-duration: 0.8s;}
section.about .inner .line li.a {animation-name: opacity-ani; animation-duration: 1.2s;}
section.about .inner .line li.b {animation-name: opacity-ani; animation-duration: 1.6s;}
section.about .inner .line li.c {animation-name: opacity-ani; animation-duration: 2s;}

@keyframes slide-up2 {
    0%{opacity: 0;}
    70%{opacity: 0; transform: translateY(40px);}
}
section.about .inner ul li {animation-name: slide-up2; animation-duration: 2.4s; }
section.about .inner ul li:nth-child(2) {animation-name: slide-up2; animation-duration: 2.8s; }
section.about .inner ul li:nth-child(3) {animation-name: slide-up2; animation-duration: 3.2s; }



/* ==== section.premium ==== */

/* premium 전체를 감싸는 코드 */
/* box-sizing: border-box; -> padding까지 포함해서 박스 사이즈로 인식, 사이즈를 파악하기 쉬워짐 */
/* 배경을 이미지로 하고싶을때 background 속성 이용 */
section.premium{width: 95%; margin:40px auto; padding: 100px 0; box-sizing: border-box; height: 1020px; background: url(../img/con2_bg.jpg)no-repeat center/cover; position: relative;}

/* txtImg(이미지 사진) 설정 */
/* 이미지에 width 애니메이션을 주기 위해 block으로 바꿈 */
/* overflow: hidden; -> width함수에서 조건을 넘는 것은 숨긴다는 의미 */
section.premium .txtImg {position: absolute; left:0; top:20%; display: block; width: 100%; animation-name: widthAni; animation-duration: 1.5s; overflow: hidden;}

@keyframes widthAni {
    0%{width: 0%;}
    30%{width: 0%;}
}

/* title(좌측 글씨) 설정 */
section.premium .title {position: absolute; left:8%; top:35%;}
section.premium .title h2 {font-size: 30px; margin-bottom: 20px;}
section.premium .title p {font-size: 19px; line-height: 1.6; margin-bottom: 30px;}
/* Q. 왜 a는 inline-block인가? */
/* a의 회색밑줄을 before로 표현할것이므로 a의 position은 relative */
section.premium .title a{font-size: 24px; display: inline-block; position: relative; }
section.premium .title a:before {content: ''; width: 80px; height: 15px; background: rgba(0, 0, 0, 0.08); position: absolute; bottom: 0;}
section.premium .title a:hover:before ,section.premium .title a:focus:before {width: 0; transition: all 0.3s;}

/* banner(사진 리스트) 설정 */
/* box-shadow : x축 길이 y축 길이 흐린정도 색상 */
section.premium .banner li {position: absolute; box-shadow: 5px 6px 15px rgba(3, 3, 3, 0.4); width: 15%;}
section.premium .banner li img {width: 100%;}
section.premium .banner li:nth-child(1){left:45%; top:15%; animation-name: slide-up; animation-duration:1.2s; }
section.premium .banner li:nth-child(2){left:37%; top:50%; animation-name: slide-up; animation-duration:1.8s;}
section.premium .banner li:nth-child(3){left:55%; top:62%; animation-name: slide-up; animation-duration:2.2s;}
section.premium .banner li:nth-child(4){right:1%; width: 32%; max-width: 580px; animation-name: slide-up; animation-duration:1.5s;}

/* section.global */

/* global 전체를 감싸는 코드 */
/* margin: 40px auto 0; -> 40px이 위, auto는 양옆, 0이 밑 */
section.global {width: 95%; margin: 40px auto 0; padding: 40px 0; text-align: center; position: relative;}
section.global:before {content: ''; width: 100%; height: 45%; background: #eee; position: absolute; left:0; bottom: 0; z-index: -1;}

/* title 설정(위쪽 글씨) */
section.global .title h2 {font-size: 30px; margin-bottom: 20px;}
section.global .title p {font-size: 18px; line-height: 1.4; margin-bottom: 50px;}

/* ul 설정(링크 포함된 사진과 글씨) */
/* 자식요소에 float를 줄 경우, 상위요소에서 크기를 지정해야함 -> ul에 overflow 필요 */
section.global ul {overflow: hidden; padding-top: 50px;}
/* width가 25%인데 padding까지 주므로 넘칠 수 있음 -> box-sizing으로 해결 */
section.global ul li {float: left; width: 25%; padding: 15px; box-sizing:border-box;}
section.global ul li:nth-child(1), section.global ul li:nth-child(3){margin-top: -50px;}
section.global ul li a {display: block;}

/* img 클래스 설정 (사진 설정) */
section.global ul li a .img {box-shadow: 10px 10px 10px rgba(0,0,0,0.25); position: relative; transition: all 0.2s;}
/* img를 컨테이너에 맞게 가득 채워줘야 함 - 화면 크기에 따라 달라질 수 있으므로 주의! */
section.global ul li a img{width: 100%; height: 100%;} 
section.global ul li a .img:after /* .img의 뒤에 오는 가상요소 */
{content:'VIEW'; width: 100%; height: 100%; background: rgba(44,35,28,0.8); position: absolute; left: 0; top:0; font-size: 22px; color:#d4d4d4; transition: all 0.2s; padding-top: 200px; box-sizing: border-box; opacity: 0;}
section.global ul li a:hover .img,section.global ul li a:focus .img /* a에 커서 있을때 .img 변화 */
{transform: translate(-8px,-8px); box-shadow: 15px 18px 10px rgba(0,0,0,0.35); }
section.global ul li a:hover .img:after, section.global ul li a:focus img:after /* a에 커서 있을때 .img 뒤에오는 가상요소의 변화 */
{opacity: 1;}

/* 사진 밑에 글씨 설정 */
section.global ul li h3 {font-size: 22px; margin: 40px 0 15px;}
/* h3와 span 구분하기 위새 + 줄바꿈 위해 block 속성 설정*/
section.global ul li h3 span {display: block; font-size: 18px; font-weight: normal; color: #888;}
section.global ul li p {font-size: 17px;}

/* ul 애니메이션 설정 */
section.global ul li{animation-name: slide-up; animation-duration: 1s;}
section.global ul li:nth-child(2){animation-name: slide-up; animation-duration: 1.4s;}
section.global ul li:nth-child(3){animation-name: slide-up; animation-duration: 1.7s;}
section.global ul li:nth-child(4){animation-name: slide-up; animation-duration: 2s;}

/* footer */

/* footer 전체를 감싸는 코드 */
footer{padding: 80px 0 0; text-align: center;}

/* sns 링크 설정 */
/* li가 block이므로 한줄로 놓기 위해 inline-block으로 변경 */
footer .sns li{display: inline-block; margin-right: 30px;}
footer .footerLogo{font-size: 40px; font-weight: 900; letter-spacing: -6px; color:#39312b; margin: 40px 0 20px;}
footer ul li{font-size: 17px; line-height: 1.6;}
/* span으로 묶은 copyright는 inline이므로 margin을 주기 위해 display를 block으로 변경 */
footer ul li .copyright{font-size: 15px; font-weight: 100; margin-top: 20px; display: block; color: #888;}

/* 맨 아래 박스 설정 */
footer .box{padding: 150px 0; background: url(../img/bottom_bg.jpg) no-repeat center/cover; margin-top: 80px;}
footer .box h2{color:#fff; font-size: 22px; font-weight: normal; animation-name: slide-up; animation-duration: 1s;}
